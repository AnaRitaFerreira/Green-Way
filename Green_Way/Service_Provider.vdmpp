class Service_Provider

instance variables
	private name: seq1 of char;
	private services: set of Service := {};
	
operations
	public Service_Provider : seq1 of char ==> Service_Provider
	Service_Provider(n) == (
		name := n;
		return self
	);
	
	public addService : Service ==> ()
	addService(serv) == (
		
    services := services union {serv};
	);
	
	public getAllSpots : () ==> set of Spot
	getAllSpots() == (
    dcl spots: set of Spot := {};
    
    for all service in set services do
    	spots := spots union service.getAllSpots();
    	
  	return spots;
	);
	
	--retorna o custo da passagem
	public passa : Client * Spot * Time * [Passage] ==> real
	passa(client, spot, time, last_passage) == (
		
			dcl all_spots : set of Spot := {};
			dcl used_service : Service;
		
		 	for all service in set services do(
				all_spots := service.getAllSpots();
				if(spot in set all_spots) then 
					used_service := service;
			);
		
			return used_service.passa(client, spot, time, last_passage);
	);
	
end Service_Provider